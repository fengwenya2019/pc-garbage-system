{"remainingRequest":"C:\\Users\\丰文雅\\Desktop\\丰文雅的毕设\\pc-garbage-system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\丰文雅\\Desktop\\丰文雅的毕设\\pc-garbage-system\\src\\store\\actions.js","dependencies":[{"path":"C:\\Users\\丰文雅\\Desktop\\丰文雅的毕设\\pc-garbage-system\\src\\store\\actions.js","mtime":1588687016925},{"path":"C:\\Users\\丰文雅\\Desktop\\丰文雅的毕设\\pc-garbage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\丰文雅\\Desktop\\丰文雅的毕设\\pc-garbage-system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from \"axios\";\nimport qs from \"qs\";\nimport store from \"../store\";\naxios.defaults.withCredentials = true; // 允许携带cookie\n\nexport default {\n  // 获取类别列表\n  queryCataList: function queryCataList() {\n    var base = \"/laji\";\n    axios.post(base + \"/laji/c/getAllc\").then(function (res) {\n      if (res.data.code === 100) {\n        store.commit(\"setCataList\", res.data.extend.classifications);\n      } else {// Toast('网络错误');\n      }\n    }).catch(function (err) {// Toast('网络错误');\n    });\n  },\n  // 新建类别\n  addCata: function addCata(store, obj) {\n    var base = \"/laji\";\n    axios.post(base + \"/laji/c/cinsert\", {\n      'classificationinfoName': obj.param.classificationinfoName,\n      'catarequire': obj.param.catarequire,\n      'cataeg': obj.param.cataeg,\n      'classificationinfoDescription': obj.param.classificationinfoDescription\n    }).then(function (res) {\n      if (res.data.code === 100) {\n        obj.that.$Message.success('创建成功');\n        store.dispatch('queryCataList');\n      } else {\n        obj.that.$Message.success('创建失败');\n      }\n    }).catch(function (err) {\n      obj.that.$Message.success('网络错误');\n    });\n  },\n  // 编辑类别\n  editCata: function editCata(store, obj) {\n    console.log(obj, 'edit');\n    var base = \"/laji\";\n    axios.post(base + \"/laji/c/cupdate\", {\n      'classificationinfoId': parseInt(obj.id),\n      'classificationinfoName': obj.param.classificationinfoName,\n      'catarequire': obj.param.catarequire,\n      'cataeg': obj.param.cataeg,\n      'classificationinfoDescription': obj.param.classificationinfoDescription\n    }).then(function (res) {\n      if (res.data.code === 100) {\n        obj.that.$Message.success('编辑成功');\n        store.dispatch('queryCataList');\n      } else {\n        obj.that.$Message.success('编辑失败');\n      }\n    }).catch(function (err) {\n      obj.that.$Message.success('网络错误');\n    });\n  },\n  // 删除类别\n  deleteCata: function deleteCata(store, obj) {\n    var base = \"/laji\";\n    axios.post(base + \"/laji/c/cdelete\", {\n      'classificationinfoId': parseInt(obj.id)\n    }).then(function (res) {\n      if (res.data.code === 100) {\n        obj.that.$Message.success('删除成功');\n        store.dispatch('queryCataList');\n      } else {\n        obj.that.$Message.success('删除失败');\n      }\n    }).catch(function (err) {\n      obj.that.$Message.success('网络错误');\n    });\n  },\n  // 获取指南列表\n  queryGuideList: function queryGuideList() {\n    var base = \"/laji\";\n    axios.post(base + \"/laji/cg/getc\").then(function (res) {\n      if (res.data.code === 100) {\n        store.commit(\"setGuideList\", res.data.extend.classificationguides);\n      } else {// Toast('网络错误');\n      }\n    }).catch(function (err) {// Toast('网络错误');\n    });\n  },\n  // 新建指南\n  addGuide: function addGuide(store, obj) {\n    var base = \"/laji\";\n    axios.post(base + \"/laji/cg/cgadd\", {\n      \"classificationguideinfoName\": obj.param.classificationguideinfoName,\n      \"classificationguideinfoClassification\": obj.param.classificationguideinfoClassification\n    }).then(function (res) {\n      if (res.data.code === 100) {\n        obj.that.$Message.success('创建成功');\n        store.dispatch('queryGuideList');\n      } else {\n        obj.that.$Message.success('创建失败');\n      }\n    }).catch(function (err) {\n      obj.that.$Message.success('网络错误');\n    });\n  },\n  // 编辑指南\n  editGuide: function editGuide(store, obj) {\n    console.log(obj, 'edit');\n    var base = \"/laji\";\n    axios.post(base + \"/laji/cg/cgupdate\", {\n      'classificationguideinfoId': parseInt(obj.id),\n      \"classificationguideinfoName\": obj.param.classificationguideinfoName,\n      \"classificationguideinfoClassification\": obj.param.classificationguideinfoClassification\n    }).then(function (res) {\n      if (res.data.code === 100) {\n        obj.that.$Message.success('编辑成功');\n        store.dispatch('queryGuideList');\n      } else {\n        obj.that.$Message.success('编辑失败');\n      }\n    }).catch(function (err) {\n      obj.that.$Message.success('网络错误');\n    });\n  },\n  // 删除类别\n  deleteGuide: function deleteGuide(store, obj) {\n    var base = \"/laji\";\n    axios.post(base + \"/laji/cg/cgdelete\", {\n      'classificationguideinfoId': parseInt(obj.id)\n    }).then(function (res) {\n      if (res.data.code === 100) {\n        obj.that.$Message.success('删除成功');\n        store.dispatch('queryGuideList');\n      } else {\n        obj.that.$Message.success('删除失败');\n      }\n    }).catch(function (err) {\n      obj.that.$Message.success('网络错误');\n    });\n  },\n  // 获取站点列表\n  querySiteList: function querySiteList() {\n    var base = \"/laji\";\n    axios.post(base + \"/laji/loc/getAllloc\").then(function (res) {\n      if (res.data.code === 100) {\n        store.commit(\"setSiteList\", res.data.extend.locations);\n      } else {\n        Toast('网络错误');\n      }\n    }).catch(function (err) {\n      Toast('网络错误');\n    });\n  },\n  // 新建站点\n  addSite: function addSite(store, obj) {\n    var base = \"/laji\";\n    axios.post(base + \"/laji/loc/locinsert\", {\n      \"locationinfoName\": obj.param.locationinfoName,\n      \"detail\": obj.param.detail,\n      \"opentime\": obj.param.opentime,\n      \"bucketcata\": obj.param.bucketcata,\n      \"bucketnum\": obj.param.bucketnum,\n      \"attention\": obj.param.attention\n    }).then(function (res) {\n      if (res.data.code === 100) {\n        obj.that.$Message.success('创建成功');\n        store.dispatch('querySiteList');\n      } else {\n        obj.that.$Message.success('创建失败');\n      }\n    }).catch(function (err) {\n      obj.that.$Message.success('网络错误');\n    });\n  },\n  // 编辑站点信息\n  editSite: function editSite(store, obj) {\n    console.log(obj, 'edit');\n    var base = \"/laji\";\n    axios.post(base + \"/laji/loc/locupdate\", {\n      \"locationinfoId\": obj.id,\n      \"locationinfoName\": obj.param.locationinfoName,\n      \"detail\": obj.param.detail,\n      \"opentime\": obj.param.opentime,\n      \"bucketcata\": obj.param.bucketcata,\n      \"bucketnum\": obj.param.bucketnum,\n      \"attention\": obj.param.attention\n    }).then(function (res) {\n      if (res.data.code === 100) {\n        obj.that.$Message.success('编辑成功');\n        store.dispatch('querySiteList');\n      } else {\n        obj.that.$Message.success('编辑失败');\n      }\n    }).catch(function (err) {\n      obj.that.$Message.success('网络错误');\n    });\n  },\n  // 删除站点信息\n  deleteSite: function deleteSite(store, obj) {\n    var base = \"/laji\";\n    axios.post(base + \"/laji/loc/locdelete\", {\n      'locationinfoId': parseInt(obj.id)\n    }).then(function (res) {\n      if (res.data.code === 100) {\n        obj.that.$Message.success('删除成功');\n        store.dispatch('querySiteList');\n      } else {\n        obj.that.$Message.success('删除失败');\n      }\n    }).catch(function (err) {\n      obj.that.$Message.success('网络错误');\n    });\n  },\n  // 获取日报列表\n  queryReportList: function queryReportList() {\n    var base = \"/laji\";\n    axios.post(base + \"/laji/green/getAllgreen\").then(function (res) {\n      if (res.data.code === 100) {\n        store.commit(\"setReportList\", res.data.extend.greendailies);\n      } else {// Toast('网络错误');\n      }\n    }).catch(function (err) {// Toast('网络错误');\n    });\n  },\n  // 新建日报\n  addReport: function addReport(store, obj) {\n    var base = \"/laji\";\n    console.log(obj);\n    axios.post(base + \"/laji/green/add\", {\n      'greendailyinfoDescription': obj.param.greendailyinfoDescription,\n      'greendailyinfoTitle': obj.param.greendailyinfoDescription,\n      'greendailyinfoText': obj.param.greendailyinfoText,\n      'greendailyinfoAuthor': obj.param.greendailyinfoDescription\n    }).then(function (res) {\n      if (res.data.code === 100) {\n        obj.that.$Message.success('发布成功');\n      } else {\n        obj.that.$Message.success('发布失败');\n      }\n    }).catch(function (err) {\n      obj.that.$Message.success('网络错误');\n    });\n  },\n  // 删除日报\n  deleteReport: function deleteReport(store, obj) {\n    var base = \"/laji\";\n    axios.post(base + \"/laji/green/delete\", {\n      \"greendailyinfoId\": obj.id\n    }).then(function (res) {\n      if (res.data.code === 100) {\n        obj.that.$Message.success('删除成功');\n        store.dispatch('queryReportList');\n      } else {\n        obj.that.$Message.success('删除失败');\n      }\n    }).catch(function (err) {\n      obj.that.$Message.success('网络错误');\n    });\n  }\n};",{"version":3,"sources":["C:\\Users\\丰文雅\\Desktop\\丰文雅的毕设\\pc-garbage-system\\src\\store\\actions.js"],"names":["axios","qs","store","defaults","withCredentials","queryCataList","base","post","then","res","data","code","commit","extend","classifications","catch","err","addCata","obj","param","classificationinfoName","catarequire","cataeg","classificationinfoDescription","that","$Message","success","dispatch","editCata","console","log","parseInt","id","deleteCata","queryGuideList","classificationguides","addGuide","classificationguideinfoName","classificationguideinfoClassification","editGuide","deleteGuide","querySiteList","locations","Toast","addSite","locationinfoName","detail","opentime","bucketcata","bucketnum","attention","editSite","deleteSite","queryReportList","greendailies","addReport","greendailyinfoDescription","greendailyinfoText","deleteReport"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,KAAP;AAEAF,KAAK,CAACG,QAAN,CAAeC,eAAf,GAAiC,IAAjC,C,CAAuC;;AAEvC,eAAc;AACV;AACAC,EAAAA,aAFU,2BAEM;AACZ,QAAMC,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,iBAAlB,EAAqCE,IAArC,CAA0C,UAACC,GAAD,EAAS;AAC/C,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBT,QAAAA,KAAK,CAACU,MAAN,CAAa,aAAb,EAA4BH,GAAG,CAACC,IAAJ,CAASG,MAAT,CAAgBC,eAA5C;AACH,OAFD,MAEK,CACD;AACH;AACJ,KAND,EAMGC,KANH,CAMS,UAACC,GAAD,EAAS,CACd;AACH,KARD;AASH,GAbS;AAcV;AACAC,EAAAA,OAfU,mBAeFf,KAfE,EAeIgB,GAfJ,EAeS;AACf,QAAMZ,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,iBAAlB,EAAoC;AAChC,gCAAyBY,GAAG,CAACC,KAAJ,CAAUC,sBADH;AAEhC,qBAAcF,GAAG,CAACC,KAAJ,CAAUE,WAFQ;AAGhC,gBAASH,GAAG,CAACC,KAAJ,CAAUG,MAHa;AAIhC,uCAAgCJ,GAAG,CAACC,KAAJ,CAAUI;AAJV,KAApC,EAKGf,IALH,CAKQ,UAACC,GAAD,EAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBO,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACAxB,QAAAA,KAAK,CAACyB,QAAN,CAAe,eAAf;AACH,OAHD,MAGK;AACDT,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH;AACJ,KAZD,EAYGX,KAZH,CAYS,UAACC,GAAD,EAAS;AACdE,MAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,KAdD;AAeH,GAhCS;AAiCV;AACAE,EAAAA,QAlCU,oBAkCD1B,KAlCC,EAkCKgB,GAlCL,EAkCU;AAChBW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ,EAAgB,MAAhB;AACA,QAAMZ,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,iBAAlB,EAAoC;AAChC,8BAAuByB,QAAQ,CAACb,GAAG,CAACc,EAAL,CADC;AAEhC,gCAAyBd,GAAG,CAACC,KAAJ,CAAUC,sBAFH;AAGhC,qBAAcF,GAAG,CAACC,KAAJ,CAAUE,WAHQ;AAIhC,gBAASH,GAAG,CAACC,KAAJ,CAAUG,MAJa;AAKhC,uCAAgCJ,GAAG,CAACC,KAAJ,CAAUI;AALV,KAApC,EAMGf,IANH,CAMQ,UAACC,GAAD,EAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBO,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACAxB,QAAAA,KAAK,CAACyB,QAAN,CAAe,eAAf;AACH,OAHD,MAGK;AACDT,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH;AACJ,KAbD,EAaGX,KAbH,CAaS,UAACC,GAAD,EAAS;AACdE,MAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,KAfD;AAgBH,GArDS;AAsDV;AACAO,EAAAA,UAvDU,sBAuDC/B,KAvDD,EAuDOgB,GAvDP,EAuDY;AAClB,QAAMZ,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,iBAAlB,EAAoC;AAChC,8BAAuByB,QAAQ,CAACb,GAAG,CAACc,EAAL;AADC,KAApC,EAEGxB,IAFH,CAEQ,UAACC,GAAD,EAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBO,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACAxB,QAAAA,KAAK,CAACyB,QAAN,CAAe,eAAf;AACH,OAHD,MAGK;AACDT,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH;AACJ,KATD,EASGX,KATH,CASS,UAACC,GAAD,EAAS;AACdE,MAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,KAXD;AAYH,GArES;AAsEV;AACAQ,EAAAA,cAvEU,4BAuEO;AACb,QAAM5B,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,eAAlB,EAAmCE,IAAnC,CAAwC,UAACC,GAAD,EAAS;AAC7C,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBT,QAAAA,KAAK,CAACU,MAAN,CAAa,cAAb,EAA6BH,GAAG,CAACC,IAAJ,CAASG,MAAT,CAAgBsB,oBAA7C;AACH,OAFD,MAEK,CACD;AACH;AACJ,KAND,EAMGpB,KANH,CAMS,UAACC,GAAD,EAAS,CACd;AACH,KARD;AASH,GAlFS;AAmFV;AACAoB,EAAAA,QApFU,oBAoFDlC,KApFC,EAoFKgB,GApFL,EAoFU;AAChB,QAAMZ,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,gBAAlB,EAAmC;AAC/B,qCAA+BY,GAAG,CAACC,KAAJ,CAAUkB,2BADV;AAE/B,+CAAyCnB,GAAG,CAACC,KAAJ,CAAUmB;AAFpB,KAAnC,EAGG9B,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBO,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACAxB,QAAAA,KAAK,CAACyB,QAAN,CAAe,gBAAf;AACH,OAHD,MAGK;AACDT,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH;AACJ,KAVD,EAUGX,KAVH,CAUS,UAACC,GAAD,EAAS;AACdE,MAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,KAZD;AAaH,GAnGS;AAoGV;AACAa,EAAAA,SArGU,qBAqGArC,KArGA,EAqGMgB,GArGN,EAqGW;AACjBW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ,EAAgB,MAAhB;AACA,QAAMZ,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,mBAAlB,EAAsC;AAClC,mCAA4ByB,QAAQ,CAACb,GAAG,CAACc,EAAL,CADF;AAElC,qCAA+Bd,GAAG,CAACC,KAAJ,CAAUkB,2BAFP;AAGlC,+CAAyCnB,GAAG,CAACC,KAAJ,CAAUmB;AAHjB,KAAtC,EAIG9B,IAJH,CAIQ,UAACC,GAAD,EAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBO,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACAxB,QAAAA,KAAK,CAACyB,QAAN,CAAe,gBAAf;AACH,OAHD,MAGK;AACDT,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH;AACJ,KAXD,EAWGX,KAXH,CAWS,UAACC,GAAD,EAAS;AACdE,MAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,KAbD;AAcH,GAtHS;AAuHV;AACAc,EAAAA,WAxHU,uBAwHEtC,KAxHF,EAwHQgB,GAxHR,EAwHa;AACnB,QAAMZ,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,mBAAlB,EAAsC;AAClC,mCAA4ByB,QAAQ,CAACb,GAAG,CAACc,EAAL;AADF,KAAtC,EAEGxB,IAFH,CAEQ,UAACC,GAAD,EAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBO,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACAxB,QAAAA,KAAK,CAACyB,QAAN,CAAe,gBAAf;AACH,OAHD,MAGK;AACDT,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH;AACJ,KATD,EASGX,KATH,CASS,UAACC,GAAD,EAAS;AACdE,MAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,KAXD;AAYH,GAtIS;AAwIV;AACAe,EAAAA,aAzIU,2BAyIM;AACZ,QAAMnC,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,qBAAlB,EAAyCE,IAAzC,CAA8C,UAACC,GAAD,EAAS;AACnD,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBT,QAAAA,KAAK,CAACU,MAAN,CAAa,aAAb,EAA4BH,GAAG,CAACC,IAAJ,CAASG,MAAT,CAAgB6B,SAA5C;AACH,OAFD,MAEK;AACDC,QAAAA,KAAK,CAAC,MAAD,CAAL;AACH;AACJ,KAND,EAMG5B,KANH,CAMS,UAACC,GAAD,EAAS;AACd2B,MAAAA,KAAK,CAAC,MAAD,CAAL;AACH,KARD;AASH,GApJS;AAqJV;AACAC,EAAAA,OAtJU,mBAsJF1C,KAtJE,EAsJIgB,GAtJJ,EAsJS;AACf,QAAMZ,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,qBAAlB,EAAwC;AACpC,0BAAmBY,GAAG,CAACC,KAAJ,CAAU0B,gBADO;AAEpC,gBAAS3B,GAAG,CAACC,KAAJ,CAAU2B,MAFiB;AAGpC,kBAAW5B,GAAG,CAACC,KAAJ,CAAU4B,QAHe;AAIpC,oBAAa7B,GAAG,CAACC,KAAJ,CAAU6B,UAJa;AAKpC,mBAAY9B,GAAG,CAACC,KAAJ,CAAU8B,SALc;AAMpC,mBAAY/B,GAAG,CAACC,KAAJ,CAAU+B;AANc,KAAxC,EAOG1C,IAPH,CAOQ,UAACC,GAAD,EAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBO,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACAxB,QAAAA,KAAK,CAACyB,QAAN,CAAe,eAAf;AACH,OAHD,MAGK;AACDT,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH;AACJ,KAdD,EAcGX,KAdH,CAcS,UAACC,GAAD,EAAS;AACdE,MAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,KAhBD;AAiBH,GAzKS;AA0KV;AACAyB,EAAAA,QA3KU,oBA2KDjD,KA3KC,EA2KKgB,GA3KL,EA2KU;AAChBW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ,EAAgB,MAAhB;AACA,QAAMZ,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,qBAAlB,EAAwC;AACpC,wBAAiBY,GAAG,CAACc,EADe;AAEpC,0BAAmBd,GAAG,CAACC,KAAJ,CAAU0B,gBAFO;AAGpC,gBAAS3B,GAAG,CAACC,KAAJ,CAAU2B,MAHiB;AAIpC,kBAAW5B,GAAG,CAACC,KAAJ,CAAU4B,QAJe;AAKpC,oBAAa7B,GAAG,CAACC,KAAJ,CAAU6B,UALa;AAMpC,mBAAY9B,GAAG,CAACC,KAAJ,CAAU8B,SANc;AAOpC,mBAAY/B,GAAG,CAACC,KAAJ,CAAU+B;AAPc,KAAxC,EAQG1C,IARH,CAQQ,UAACC,GAAD,EAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBO,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACAxB,QAAAA,KAAK,CAACyB,QAAN,CAAe,eAAf;AACH,OAHD,MAGK;AACDT,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH;AACJ,KAfD,EAeGX,KAfH,CAeS,UAACC,GAAD,EAAS;AACdE,MAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,KAjBD;AAkBH,GAhMS;AAiMV;AACA0B,EAAAA,UAlMU,sBAkMClD,KAlMD,EAkMOgB,GAlMP,EAkMY;AAClB,QAAMZ,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,qBAAlB,EAAwC;AACpC,wBAAiByB,QAAQ,CAACb,GAAG,CAACc,EAAL;AADW,KAAxC,EAEGxB,IAFH,CAEQ,UAACC,GAAD,EAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBO,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACAxB,QAAAA,KAAK,CAACyB,QAAN,CAAe,eAAf;AACH,OAHD,MAGK;AACDT,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH;AACJ,KATD,EASGX,KATH,CASS,UAACC,GAAD,EAAS;AACdE,MAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,KAXD;AAYH,GAhNS;AAoNV;AACA2B,EAAAA,eArNU,6BAqNQ;AACd,QAAM/C,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,yBAAlB,EAA6CE,IAA7C,CAAkD,UAACC,GAAD,EAAS;AACvD,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBT,QAAAA,KAAK,CAACU,MAAN,CAAa,eAAb,EAA8BH,GAAG,CAACC,IAAJ,CAASG,MAAT,CAAgByC,YAA9C;AACH,OAFD,MAEK,CACD;AACH;AACJ,KAND,EAMGvC,KANH,CAMS,UAACC,GAAD,EAAS,CACd;AACH,KARD;AASH,GAhOS;AAiOV;AACAuC,EAAAA,SAlOU,qBAkOArD,KAlOA,EAkOMgB,GAlON,EAkOW;AACjB,QAAMZ,IAAI,GAAG,OAAb;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACAlB,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,iBAAlB,EAAoC;AAChC,mCAA6BY,GAAG,CAACC,KAAJ,CAAUqC,yBADP;AAEhC,6BAAuBtC,GAAG,CAACC,KAAJ,CAAUqC,yBAFD;AAGhC,4BAAsBtC,GAAG,CAACC,KAAJ,CAAUsC,kBAHA;AAIhC,8BAAwBvC,GAAG,CAACC,KAAJ,CAAUqC;AAJF,KAApC,EAKGhD,IALH,CAKQ,UAACC,GAAD,EAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBO,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,OAFD,MAEK;AACDR,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH;AACJ,KAXD,EAWGX,KAXH,CAWS,UAACC,GAAD,EAAS;AACdE,MAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,KAbD;AAcH,GAnPS;AAqPV;AACAgC,EAAAA,YAtPU,wBAsPGxD,KAtPH,EAsPSgB,GAtPT,EAsPc;AACpB,QAAMZ,IAAI,GAAG,OAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,GAAG,oBAAlB,EAAuC;AACnC,0BAAmBY,GAAG,CAACc;AADY,KAAvC,EAEGxB,IAFH,CAEQ,UAACC,GAAD,EAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBO,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACAxB,QAAAA,KAAK,CAACyB,QAAN,CAAe,iBAAf;AACH,OAHD,MAGK;AACDT,QAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH;AACJ,KATD,EASGX,KATH,CASS,UAACC,GAAD,EAAS;AACdE,MAAAA,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkBC,OAAlB,CAA0B,MAA1B;AACH,KAXD;AAYH;AApQS,CAAd","sourcesContent":["import axios from \"axios\"\r\nimport qs from \"qs\"\r\nimport store from \"../store\";\r\n\r\naxios.defaults.withCredentials = true; // 允许携带cookie\r\n\r\nexport default{\r\n    // 获取类别列表\r\n    queryCataList() {\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/c/getAllc\").then((res) => {\r\n            if(res.data.code === 100){\r\n                store.commit(\"setCataList\", res.data.extend.classifications)\r\n            }else{\r\n                // Toast('网络错误');\r\n            }\r\n        }).catch((err) => {\r\n            // Toast('网络错误');\r\n        })\r\n    },\r\n    // 新建类别\r\n    addCata(store,obj) {\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/c/cinsert\",{\r\n            'classificationinfoName':obj.param.classificationinfoName,\r\n            'catarequire':obj.param.catarequire,\r\n            'cataeg':obj.param.cataeg,\r\n            'classificationinfoDescription':obj.param.classificationinfoDescription,\r\n        }).then((res) => {\r\n            if(res.data.code === 100){\r\n                obj.that.$Message.success('创建成功');\r\n                store.dispatch('queryCataList')\r\n            }else{\r\n                obj.that.$Message.success('创建失败');\r\n            }\r\n        }).catch((err) => {\r\n            obj.that.$Message.success('网络错误');\r\n        })\r\n    },\r\n    // 编辑类别\r\n    editCata(store,obj) {\r\n        console.log(obj,'edit')\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/c/cupdate\",{\r\n            'classificationinfoId':parseInt(obj.id),\r\n            'classificationinfoName':obj.param.classificationinfoName,\r\n            'catarequire':obj.param.catarequire,\r\n            'cataeg':obj.param.cataeg,\r\n            'classificationinfoDescription':obj.param.classificationinfoDescription,\r\n        }).then((res) => {\r\n            if(res.data.code === 100){\r\n                obj.that.$Message.success('编辑成功');\r\n                store.dispatch('queryCataList')\r\n            }else{\r\n                obj.that.$Message.success('编辑失败');\r\n            }\r\n        }).catch((err) => {\r\n            obj.that.$Message.success('网络错误');\r\n        })\r\n    },\r\n    // 删除类别\r\n    deleteCata(store,obj) {\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/c/cdelete\",{\r\n            'classificationinfoId':parseInt(obj.id),\r\n        }).then((res) => {\r\n            if(res.data.code === 100){\r\n                obj.that.$Message.success('删除成功');\r\n                store.dispatch('queryCataList')\r\n            }else{\r\n                obj.that.$Message.success('删除失败');\r\n            }\r\n        }).catch((err) => {\r\n            obj.that.$Message.success('网络错误');\r\n        })\r\n    },\r\n    // 获取指南列表\r\n    queryGuideList() {\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/cg/getc\").then((res) => {\r\n            if(res.data.code === 100){\r\n                store.commit(\"setGuideList\", res.data.extend.classificationguides)\r\n            }else{\r\n                // Toast('网络错误');\r\n            }\r\n        }).catch((err) => {\r\n            // Toast('网络错误');\r\n        })\r\n    },\r\n    // 新建指南\r\n    addGuide(store,obj) {\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/cg/cgadd\",{\r\n            \"classificationguideinfoName\": obj.param.classificationguideinfoName,\r\n            \"classificationguideinfoClassification\": obj.param.classificationguideinfoClassification,\r\n        }).then((res) => {\r\n            if(res.data.code === 100){\r\n                obj.that.$Message.success('创建成功');\r\n                store.dispatch('queryGuideList')\r\n            }else{\r\n                obj.that.$Message.success('创建失败');\r\n            }\r\n        }).catch((err) => {\r\n            obj.that.$Message.success('网络错误');\r\n        })\r\n    },\r\n    // 编辑指南\r\n    editGuide(store,obj) {\r\n        console.log(obj,'edit')\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/cg/cgupdate\",{\r\n            'classificationguideinfoId':parseInt(obj.id),\r\n            \"classificationguideinfoName\": obj.param.classificationguideinfoName,\r\n            \"classificationguideinfoClassification\": obj.param.classificationguideinfoClassification,\r\n        }).then((res) => {\r\n            if(res.data.code === 100){\r\n                obj.that.$Message.success('编辑成功');\r\n                store.dispatch('queryGuideList')\r\n            }else{\r\n                obj.that.$Message.success('编辑失败');\r\n            }\r\n        }).catch((err) => {\r\n            obj.that.$Message.success('网络错误');\r\n        })\r\n    },\r\n    // 删除类别\r\n    deleteGuide(store,obj) {\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/cg/cgdelete\",{\r\n            'classificationguideinfoId':parseInt(obj.id),\r\n        }).then((res) => {\r\n            if(res.data.code === 100){\r\n                obj.that.$Message.success('删除成功');\r\n                store.dispatch('queryGuideList')\r\n            }else{\r\n                obj.that.$Message.success('删除失败');\r\n            }\r\n        }).catch((err) => {\r\n            obj.that.$Message.success('网络错误');\r\n        })\r\n    },\r\n\r\n    // 获取站点列表\r\n    querySiteList() {\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/loc/getAllloc\").then((res) => {\r\n            if(res.data.code === 100){\r\n                store.commit(\"setSiteList\", res.data.extend.locations)\r\n            }else{\r\n                Toast('网络错误');\r\n            }\r\n        }).catch((err) => {\r\n            Toast('网络错误');\r\n        })\r\n    },\r\n    // 新建站点\r\n    addSite(store,obj) {\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/loc/locinsert\",{\r\n            \"locationinfoName\":obj.param.locationinfoName,\r\n            \"detail\":obj.param.detail,\r\n            \"opentime\":obj.param.opentime,\r\n            \"bucketcata\":obj.param.bucketcata,\r\n            \"bucketnum\":obj.param.bucketnum,\r\n            \"attention\":obj.param.attention,\r\n        }).then((res) => {\r\n            if(res.data.code === 100){\r\n                obj.that.$Message.success('创建成功');\r\n                store.dispatch('querySiteList')\r\n            }else{\r\n                obj.that.$Message.success('创建失败');\r\n            }\r\n        }).catch((err) => {\r\n            obj.that.$Message.success('网络错误');\r\n        })\r\n    },\r\n    // 编辑站点信息\r\n    editSite(store,obj) {\r\n        console.log(obj,'edit')\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/loc/locupdate\",{\r\n            \"locationinfoId\":obj.id,\r\n            \"locationinfoName\":obj.param.locationinfoName,\r\n            \"detail\":obj.param.detail,\r\n            \"opentime\":obj.param.opentime,\r\n            \"bucketcata\":obj.param.bucketcata,\r\n            \"bucketnum\":obj.param.bucketnum,\r\n            \"attention\":obj.param.attention,\r\n        }).then((res) => {\r\n            if(res.data.code === 100){\r\n                obj.that.$Message.success('编辑成功');\r\n                store.dispatch('querySiteList')\r\n            }else{\r\n                obj.that.$Message.success('编辑失败');\r\n            }\r\n        }).catch((err) => {\r\n            obj.that.$Message.success('网络错误');\r\n        })\r\n    },\r\n    // 删除站点信息\r\n    deleteSite(store,obj) {\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/loc/locdelete\",{\r\n            'locationinfoId':parseInt(obj.id),\r\n        }).then((res) => {\r\n            if(res.data.code === 100){\r\n                obj.that.$Message.success('删除成功');\r\n                store.dispatch('querySiteList')\r\n            }else{\r\n                obj.that.$Message.success('删除失败');\r\n            }\r\n        }).catch((err) => {\r\n            obj.that.$Message.success('网络错误');\r\n        })\r\n    },\r\n\r\n\r\n\r\n    // 获取日报列表\r\n    queryReportList() {\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/green/getAllgreen\").then((res) => {\r\n            if(res.data.code === 100){\r\n                store.commit(\"setReportList\", res.data.extend.greendailies)\r\n            }else{\r\n                // Toast('网络错误');\r\n            }\r\n        }).catch((err) => {\r\n            // Toast('网络错误');\r\n        })\r\n    },\r\n    // 新建日报\r\n    addReport(store,obj) {\r\n        const base = \"/laji\"\r\n        console.log(obj)\r\n        axios.post(base + \"/laji/green/add\",{\r\n            'greendailyinfoDescription': obj.param.greendailyinfoDescription,\r\n            'greendailyinfoTitle': obj.param.greendailyinfoDescription,\r\n            'greendailyinfoText': obj.param.greendailyinfoText,\r\n            'greendailyinfoAuthor': obj.param.greendailyinfoDescription,\r\n        }).then((res) => {\r\n            if(res.data.code === 100){\r\n                obj.that.$Message.success('发布成功');\r\n            }else{\r\n                obj.that.$Message.success('发布失败');\r\n            }\r\n        }).catch((err) => {\r\n            obj.that.$Message.success('网络错误');\r\n        })\r\n    },\r\n\r\n    // 删除日报\r\n    deleteReport(store,obj) {\r\n        const base = \"/laji\"\r\n        axios.post(base + \"/laji/green/delete\",{\r\n            \"greendailyinfoId\":obj.id\r\n        }).then((res) => {\r\n            if(res.data.code === 100){\r\n                obj.that.$Message.success('删除成功');\r\n                store.dispatch('queryReportList')\r\n            }else{\r\n                obj.that.$Message.success('删除失败');\r\n            }\r\n        }).catch((err) => {\r\n            obj.that.$Message.success('网络错误');\r\n        })\r\n    },\r\n\r\n}"]}]}