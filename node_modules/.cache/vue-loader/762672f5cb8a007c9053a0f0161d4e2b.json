{"remainingRequest":"/Users/mac/Desktop/我的文件/我的毕设/pc-garbage-system/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/我的文件/我的毕设/pc-garbage-system/src/components/CataManage.vue?vue&type=style&index=0&id=603972c0&scoped=true&lang=css&","dependencies":[{"path":"/Users/mac/Desktop/我的文件/我的毕设/pc-garbage-system/src/components/CataManage.vue","mtime":1587110008359},{"path":"/Users/mac/Desktop/我的文件/我的毕设/pc-garbage-system/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mac/Desktop/我的文件/我的毕设/pc-garbage-system/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mac/Desktop/我的文件/我的毕设/pc-garbage-system/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mac/Desktop/我的文件/我的毕设/pc-garbage-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/我的文件/我的毕设/pc-garbage-system/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.cata-manage {\n  width: 100%;\n  height: 100%;\n  /* background-color: green; */\n}\n.new-btn {\n  padding: 40px 40px;\n  text-align: left;\n}\n.cata-list {\n  padding: 10px 40px;\n}\n",{"version":3,"sources":["CataManage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CataManage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"cata-manage\">\n    <div class=\"new-btn\">\n      <Button type=\"info\" @click=\"newCata()\">新建类别</Button>\n    </div>\n    <div class=\"cata-list\">\n      <Table border :columns=\"columns\" :data=\"cataList\"></Table>\n    </div>\n    <Modal v-model=\"modal\" :title=\"modalTitle\" @on-ok=\"ok(editCataType.classificationinfoId)\" @on-cancel=\"cancel\">\n      <Form :model=\"editCataType\" label-position=\"left\" :label-width=\"100\">\n        <FormItem label=\"序号\">\n          <Input v-model=\"editCataType.classificationinfoId\"></Input>\n        </FormItem>\n        <FormItem label=\"类别\">\n          <Input v-model=\"editCataType.classificationinfoName\"></Input>\n        </FormItem>\n        <FormItem label=\"描述\">\n          <Input type=\"textarea\" :autosize=\"{minRows: 3,maxRows: 5}\" v-model=\"editCataType.classificationinfoDescription\"></Input>\n        </FormItem>\n      </Form>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex';\nexport default {\n  mounted() {\n    this.$store.dispatch('queryCata')\n  },\n  computed:{\n      ...mapState([\"cataList\"])\n  },\n  data() {\n    return {\n      modal: false,\n      modalTitle: \"\",\n      tip: \"\",\n      editCataType: {\n        classificationinfoId: \"\",\n        classificationinfoName: \"\",\n        classificationinfoDescription: \"\"\n      },\n      columns: [\n        {\n          title: \"序号\",\n          key: \"classificationinfoId\",\n          width: 100,\n          align: \"center\"\n        },\n        {\n          title: \"类别\",\n          key: \"classificationinfoName\",\n          width: 100,\n          align: \"center\"\n        },\n        {\n          title: \"描述\",\n          key: \"classificationinfoDescription\",\n          align: \"left\",\n\n          render: (h, params) => {\n            return h(\"div\", params.row.classificationinfoDescription);\n          }\n        },\n        {\n          title: \"操作\",\n          key: \"operation\",\n          width: 150,\n          align: \"center\",\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.editCata(params.row);\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\"\n                  },\n                  on: {\n                    click: () => {\n                      // this.remove(params.index);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n    };\n  },\n  methods: {\n    newCata() {\n      this.modal = true;\n      this.modalTitle = \"新建类别\";\n    },\n    editCata(cata) {\n      this.modal = true;\n      this.modalTitle = \"编辑类别\";\n      this.editCataType = cata;\n    },\n    ok(id) {\n      // this.$Message.info(\"新建成功\");\n      // console.log(this.editCataType)\n      // const params = JSON.stringify(this.editCataType)\n      if( this.modalTitle = \"新建类别\"){\n        this.$store.dispatch(\"addCata\",this.editCataType)\n      }{\n        const params = this.editCataType\n        params.classificationinfoId = id+''\n        console.log(toString(id))\n        this.$store.dispatch(\"editCata\",params)\n      }\n      \n    },\n    cancel() {}\n  }\n};\n</script>\n\n<style scoped>\n.cata-manage {\n  width: 100%;\n  height: 100%;\n  /* background-color: green; */\n}\n.new-btn {\n  padding: 40px 40px;\n  text-align: left;\n}\n.cata-list {\n  padding: 10px 40px;\n}\n</style>"]}]}